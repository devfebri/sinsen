<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Invoice_tjs extends CI_Controller {

	var $tables = "tr_invoice_tjs";	
	var $folder = "dealer";
	var $page   = "invoice_tjs";
	var $title  = "Invoice Tanda Jadi Sementara (TJS)";

	public function __construct()
	{		
		parent::__construct();
		//---- cek session -------//		
		$name = $this->session->userdata('nama');
		if ($name=="")
		{
			echo "<meta http-equiv='refresh' content='0; url=".base_url()."panel'>";
		}

		//===== Load Database =====
		$this->load->database();
		$this->load->helper('url');
		//===== Load Model =====
		$this->load->model('m_admin');		
		//===== Load Library =====
		// $this->load->library('upload');
		$this->load->library('mpdf_l');
		$this->load->helper('tgl_indo');
		$this->load->helper('terbilang');

	}
	protected function template($data)
	{
		$name = $this->session->userdata('nama');
		if($name=="")
		{
			echo "<meta http-equiv='refresh' content='0; url=".base_url()."panel'>";
		}else{
			$this->load->view('template/header',$data);
			$this->load->view('template/aside');			
			$this->load->view($this->folder."/".$this->page);		
			$this->load->view('template/footer');
		}
	}

	public function index()
	{				
		$data['isi']    = $this->page;		
		$data['title']	= $this->title;															
		$data['set']	= "index";	
		$this->template($data);	
	}

	public function fetch()
   	{
		$fetch_data = $this->make_query();  
		$data = array();  
		foreach($fetch_data->result() as $rs)  
		{  
			$sub_array     = array();
			$button = '';
			$btn_cetak = "<a data-toggle='tooltip' title='Print' href='dealer/Invoice_tjs/cetak?id=$rs->id_invoice'><button class='btn btn-flat btn-xs btn-primary'>Print</button></a>";
			$button = $btn_cetak;
			$sub_array[] = "<a data-toggle='tooltip' href='dealer/Invoice_tjs/detail?id=$rs->id_invoice'>$rs->id_invoice</a>";
			$sub_array[] = $rs->no_spk;
			$sub_array[] = $rs->id_sales_people;
			$sub_array[] = $rs->nama_konsumen;
			$sub_array[] = $rs->no_ktp;
			$sub_array[] = $rs->tipe_pembayaran;
			$sub_array[] = $rs->created_at;
			$sub_array[] = mata_uang_rp($rs->tanda_jadi);
			$sub_array[] = $button;
			$data[]      = $sub_array;  
		}  
		$output = array(  
          "draw"            =>     intval($_POST["draw"]),  
          "recordsFiltered" =>     $this->get_filtered_data(),  
          "data"            =>     $data  
		);  
		echo json_encode($output);  
   	}

   	function make_query($no_limit=null)  
   	{  
		$start        = $this->input->post('start');
		$length       = $this->input->post('length');
		$order_column = array('id_invoice','id_spk',null,null,null,null,null,null,null); 
		$limit        = "LIMIT $start,$length";
		$order        = 'ORDER BY tr_invoice_tjs.created_at DESC';
		$search       = $this->input->post('search')['value'];
		$id_dealer     = $this->m_admin->cari_dealer();
		$searchs      = "WHERE tr_invoice_tjs.id_dealer=$id_dealer";

		if ($search!='') {
	      $searchs .= " AND (tr_spk.nama_konsumen LIKE '%$search%' 
	          OR tr_spk.no_ktp LIKE '%$search%'
	          OR tr_invoice_tjs.id_invoice LIKE '%$search%'
	          OR jenis_beli LIKE '%$search%'
			  OR 
					  (SELECT id_flp_md FROM tr_prospek WHERE id_customer=tr_spk.id_customer ORDER BY created_at DESC LIMIT 1)
	      	          LIKE '%$search%'
	          )
	      ";
	  	}
     	
     	if(isset($_POST["order"]))  
		{	
			$order_clm = $order_column[$_POST['order']['0']['column']];
			$order_by  = $_POST['order']['0']['dir'];
			$order     = "ORDER BY $order_clm $order_by";
     	}
     	
     	if ($no_limit=='y')$limit='';
     	$id_dealer     = $this->m_admin->cari_dealer();
   		return $this->db->query("SELECT tr_spk.*,tr_invoice_tjs.id_invoice,(SELECT id_flp_md FROM tr_prospek WHERE id_customer=tr_spk.id_customer ORDER BY created_at DESC LIMIT 1)as id_sales_people,jenis_beli as tipe_pembayaran FROM tr_invoice_tjs
   			JOIN tr_spk ON tr_invoice_tjs.id_spk=tr_spk.no_spk
   			$searchs AND tr_invoice_tjs.id_dealer=$id_dealer $order $limit ");
   	}  
   	function get_filtered_data(){  
		return $this->make_query('y')->num_rows();  
   	}  

	public function add()
	{				
		$data['isi']   = $this->page;		
		$data['title'] = $this->title;		
		$data['mode']  = 'insert';
		$data['set']   = "form";
		$id_dealer     = $this->m_admin->cari_dealer();
		$data['spk'] = $this->db->query("SELECT tr_spk.*,warna,tipe_ahm,(SELECT id_flp_md FROM tr_prospek WHERE id_customer=tr_spk.id_customer ORDER BY created_at DESC LIMIT 1)as id_sales_people,
			(SELECT id_karyawan_dealer FROM tr_prospek WHERE id_customer=tr_spk.id_customer ORDER BY created_at DESC LIMIT 1)as id_karyawan_dealer,jenis_beli as tipe_pembayaran
			FROM tr_spk 
				JOIN ms_tipe_kendaraan ON tr_spk.id_tipe_kendaraan=ms_tipe_kendaraan.id_tipe_kendaraan
				JOIN ms_warna ON ms_warna.id_warna=tr_spk.id_warna
				WHERE tr_spk.id_dealer=$id_dealer AND no_spk NOT IN (SELECT id_spk FROM tr_invoice_tjs WHERE id_dealer=$id_dealer)
				AND status_spk='approved'
			ORDER BY tr_spk.created_at DESC");
		// $data['spk'] = $this->db->get('tr_spk');
		$this->template($data);	
	}
	
	public function get_id_invoice()
	{
		$th       = date('Y');
		$bln      = date('m');
		$th_bln   = date('Y-m');
		$th_kecil = date('y');
		$id_dealer = $this->m_admin->cari_dealer();
		// $id_sumber='E20';
		// if ($id_dealer!=null) {
			$dealer    = $this->db->get_where('ms_dealer',['id_dealer'=>$id_dealer])->row();
			$id_sumber = $dealer->kode_dealer_md;
		// }
		$get_data  = $this->db->query("SELECT * FROM tr_invoice_tjs
			WHERE LEFT(created_at,7)='$th_bln' AND id_dealer=$id_dealer
			ORDER BY created_at DESC LIMIT 0,1");
	   		if ($get_data->num_rows()>0) {
				$row        = $get_data->row();
				$id_invoice = substr($row->id_invoice, -5);
				$new_kode   = 'TJ/'.$id_sumber.'/'.$th_kecil.'/'.$bln.'/'.sprintf("%'.05d",$id_invoice+1);
				$i=0;
				while ($i<1) {
					$cek = $this->db->get_where('tr_invoice_tjs',['id_invoice'=>$new_kode])->num_rows();
				    if ($cek>0) {
						$neww     = substr($new_kode, -5);
						$new_kode = 'TJ/'.$id_sumber.'/'.$th_kecil.'/'.$bln.'/'.sprintf("%'.05d",$neww+1);
						$i        = 0;
				    }else{
				    	$i++;
				    }
				}
	   		}else{
				$new_kode = 'TJ/'.$id_sumber.'/'.$th_kecil.'/'.$bln.'/'.'00001';
	   		}
   		return strtoupper($new_kode);
	}
	public function tes_inv()
	{
		echo $this->get_id_invoice();
	}
	public function save()
	{		
		$waktu     = gmdate("y-m-d H:i:s", time()+60*60*7);
		$tgl       = gmdate("y-m-d", time()+60*60*7);
		$login_id  = $this->session->userdata('id_user');
		$id_dealer = $this->m_admin->cari_dealer();
		
		$id_invoice = $data['id_invoice'] = $this->get_id_invoice();
		$data['id_spk']             = $this->input->post('id_spk');
		$data['id_karyawan_dealer'] = $this->input->post('id_karyawan_dealer');
		$data['id_dealer']          = $id_dealer;
		$data['created_at']         = $waktu;		
		$data['created_by']         = $login_id;

		// $ktg_notif      = $this->db->get_where('ms_notifikasi_kategori',['id_notif_kat'=>11])->row();
		// $get_notif_grup = $this->db->get_where('ms_notifikasi_grup',['id_notif_kat'=>11]);
		// $email          = array();
		// foreach ($get_notif_grup->result() as $rd) {
		// 	$get_email = $this->db->query("SELECT email FROM ms_karyawan 
		// 			WHERE id_karyawan IN(
		// 				SELECT id_karyawan_dealer FROM ms_user 
		// 				WHERE jenis_user='Main Dealer' 
		// 				AND active=1 
		// 				AND id_user_group=(
		// 					SELECT id_user_group FROM ms_user_group 
		// 					WHERE code='$rd->code_user_group'
		// 				)
		// 			)
		// 	")->result();
		// 	foreach ($get_email as $usr) {
		// 		$email[] = $usr->email;
		// 	}
		// }

		// $notif = ['id_notif_kat'=> $ktg_notif->id_notif_kat,
		// 			'id_referensi' => $kode_event,
		// 			'judul'        => "Event Baru Dari Dealer",
		// 			'pesan'        => "Silahkan lakukan approve/reject Event $kode_event yang telah diinisiasi oleh Dealer.",
		// 			'link'         => $ktg_notif->link.'/detail?nt=y&id='.$kode_event,
		// 			'status'       =>'baru',
		// 			'created_at'   => $waktu,
		// 			'created_by'   => $login_id
		// 		 ];
		$this->db->trans_begin();
			$this->db->insert('tr_invoice_tjs',$data);
			// $this->db->insert('tr_notifikasi',$notif);
						
		if ($this->db->trans_status() === FALSE)
      	{
			$this->db->trans_rollback();
			$_SESSION['pesan'] 	= "Something when Wrong";
			$_SESSION['tipe'] 	= "success";
			echo "<script>history.go(-1)</script>";
      	}
      	else
      	{
        	$this->db->trans_commit();

        	$_SESSION['pesan'] 	= "Data has been saved successfully";
			$_SESSION['tipe'] 	= "success";
			echo "<meta http-equiv='refresh' content='0; url=".base_url()."dealer/Invoice_tjs'>";
      	}
    }

	public function cetak()
	{
		$tgl       = gmdate("y-m-d", time()+60*60*7);
		$waktu     = gmdate("y-m-d H:i:s", time()+60*60*7);
		$login_id  = $this->session->userdata('id_user');
		$id_invoice = $this->input->get('id');				
  		
  		$get_data = $this->db->query("SELECT tr_spk.*,tr_invoice_tjs.id_invoice,print_ke,(SELECT id_flp_md FROM tr_prospek WHERE id_customer=tr_spk.id_customer ORDER BY created_at DESC LIMIT 1)as id_sales_people,jenis_beli as tipe_pembayaran FROM tr_invoice_tjs
   			JOIN tr_spk ON tr_invoice_tjs.id_spk=tr_spk.no_spk
   			WHERE id_invoice='$id_invoice' ");
  		if ($get_data->num_rows()>0) {
  			$row = $data['row'] = $get_data->row();
  			$upd = ['print_ke'=> $row->print_ke+1,
  					'print_at'=> $waktu,
  					'print_by'=> $login_id,
  				   ];
  			$this->db->update('tr_invoice_tjs',$upd,['id_invoice'=>$id_invoice]);
			$mpdf                           = $this->mpdf_l->load();
			$mpdf->allow_charset_conversion = true;  // Set by default to TRUE
			$mpdf->charset_in               = 'UTF-8';
			$mpdf->autoLangToFont           = true;

			$data['set'] = 'print';
			$data['row'] = $row;
        	
        	$html = $this->load->view('dealer/invoice_tjs_cetak', $data, true);
        	// render the view into HTML
	        $mpdf->WriteHTML($html);
	        // write the HTML into the mpdf
	        $output = 'cetak_.pdf';
	        $mpdf->Output("$output", 'I');	        
        }else{
			echo "<meta http-equiv='refresh' content='0; url=".base_url()."dealer/Invoice_tjs'>";		
        }
        
	}

	public function detail()
	{				
		$data['isi']   = $this->page;		
		$data['title'] = $this->title;		
		$data['mode']  = 'detail';
		$data['set']   = "form";
		$id_dealer     = $this->m_admin->cari_dealer();
		$id_invoice = $this->input->get('id');
		$row = $this->db->query("SELECT tr_spk.*,id_spk,tr_invoice_tjs.id_invoice,(SELECT id_flp_md FROM tr_prospek WHERE id_customer=tr_spk.id_customer ORDER BY created_at DESC LIMIT 1)as id_sales_people,jenis_beli as tipe_pembayaran,
			CONCAT(tr_spk.id_tipe_kendaraan,' | ',tipe_ahm) as tipe,
			CONCAT(tr_spk.id_warna,' | ',warna) as warna	
			FROM tr_invoice_tjs
   			JOIN tr_spk ON tr_invoice_tjs.id_spk=tr_spk.no_spk
   			JOIN ms_tipe_kendaraan ON tr_spk.id_tipe_kendaraan=ms_tipe_kendaraan.id_tipe_kendaraan
			JOIN ms_warna ON ms_warna.id_warna=tr_spk.id_warna
   			WHERE tr_invoice_tjs.id_invoice='$id_invoice'");
		if ($row->num_rows()>0) {
			$data['row'] = $row->row();
			$data['spk'] = $this->db->query("SELECT tr_spk.*,warna,tipe_ahm,(SELECT id_flp_md FROM tr_prospek WHERE id_customer=tr_spk.id_customer ORDER BY created_at DESC LIMIT 1)as id_sales_people,
			(SELECT id_karyawan_dealer FROM tr_prospek WHERE id_customer=tr_spk.id_customer ORDER BY created_at DESC LIMIT 1)as id_karyawan_dealer,jenis_beli as tipe_pembayaran
			FROM tr_spk 
				JOIN ms_tipe_kendaraan ON tr_spk.id_tipe_kendaraan=ms_tipe_kendaraan.id_tipe_kendaraan
				JOIN ms_warna ON ms_warna.id_warna=tr_spk.id_warna
				WHERE tr_spk.id_dealer=$id_dealer ORDER BY tr_spk.created_at DESC");
		}else{
			echo "<meta http-equiv='refresh' content='0; url=".base_url()."dealer/Invoice_tjs'>";		
		}
		$this->template($data);	
	}

	public function cek_bbn($id_tipe_kendaraan,$id_warna){
		$tipe 							= "Customer Umum";

		$cek_bbn = $this->db->query("SELECT * FROM ms_bbn_dealer WHERE id_tipe_kendaraan = '$id_tipe_kendaraan'");

		if($cek_bbn->num_rows() > 0){

			$te = $cek_bbn->row();

			$biaya_bbn = $te->biaya_bbn;

		}else{

			$biaya_bbn = 0;

		}



		$item = $this->db->query("SELECT * FROM ms_item WHERE id_tipe_kendaraan = '$id_tipe_kendaraan' AND id_warna = '$id_warna'");

		if($item->num_rows() > 0){

			$ty = $item->row();

			$id_item = $ty->id_item;

		}else{

			$id_item = "";

		}


		$date = date('Y-m-d');
		$cek_harga = $this->db->query("SELECT * FROM ms_kelompok_md 

			INNER JOIN ms_kelompok_harga ON ms_kelompok_md.id_kelompok_harga = ms_kelompok_harga.id_kelompok_harga 

			WHERE ms_kelompok_md.id_item = '$id_item' AND start_date <='$date' AND ms_kelompok_harga.target_market = '$tipe' ORDER BY start_date DESC LIMIT 0,1");

		if($cek_harga->num_rows() > 0){

			$ts = $cek_harga->row();			

			$harga_jual = $ts->harga_jual;

		}else{			

			$harga_jual = 0;

		}



		$harga 		= floor($harga_jual / 1.1);

		$ppn 			= floor(0.1 * $harga);

		$harga_on = $harga_jual + $biaya_bbn;		

		$harga_tunai = $harga_on;		



		return ['biaya_bbn'=>$biaya_bbn,'harga_on_road'=>$harga_on,'harga_jual'=>$harga_jual,'ppn'=>$ppn,'harga'=>$harga,'harga_tunai'=>$harga_tunai];

	}
	public function bbn($id_tipe_kendaraan,$id_warna)
	{
		echo json_encode($this->cek_bbn($id_tipe_kendaraan,$id_warna));
	}
	public function tes($up=null)
	{
		$cek = $this->db->query("SELECT * FROM tr_spk WHERE harga>harga_on_road");
		$date = date('Y-m-d');
		$tipe 							= "Customer Umum";
		foreach ($cek->result() as $rs) {
			$harga = $this->cek_bbn($rs->id_tipe_kendaraan,$rs->id_warna);
			$upd_spk[] = ['no_spk'=>$rs->no_spk,
							'harga'             => $harga['harga'],
							'harga_off_road'    => $harga['harga_jual'],
							'harga_on_road'    => $harga['harga_on_road'],
							'ppn'               => $harga['ppn'],
							'id_tipe_kendaraan' => $rs->id_tipe_kendaraan,
							'id_warna'          => $rs->id_warna
						 ];	
		}
		if ($up==null) {
			echo json_encode($upd_spk);
		}else{
			$this->db->update_batch('tr_spk',$upd_spk,'no_spk');
			echo 'Tot :'. $this->db->affected_rows();
		}
	}
}