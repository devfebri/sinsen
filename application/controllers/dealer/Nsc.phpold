<?php
defined('BASEPATH') or exit('No direct script access allowed');

class Nsc extends CI_Controller
{

  var $folder = "dealer";
  var $page   = "nsc";
  var $title  = "Nota Suku Cadang (NSC)";

  public function __construct()
  {
    parent::__construct();
    //---- cek session -------//		
    $name = $this->session->userdata('nama');
    if ($name == "") {
      echo "<meta http-equiv='refresh' content='0; url=" . base_url() . "panel'>";
    }

    //===== Load Database =====
    $this->load->database();
    $this->load->helper('url');
    //===== Load Model =====
    $this->load->model('m_admin');
    $this->load->model('m_h2_billing', 'mh2');
    $this->load->model('m_h2_api', 'm_api');
    $this->load->model('m_h2_master', 'mh2m');
    $this->load->model('m_h2_work_order', 'm_wo');
    $this->load->model('m_h23_nsc', 'm_nsc');
    $this->load->model('notifikasi_model', 'notifikasi');
    $this->load->model('h3_dealer_transaksi_stok_model', 'transaksi_stok');

    //===== Load Library =====
    $this->load->library('upload');
    $this->load->library('form_validation');
    $this->load->helper('tgl_indo');
    $this->load->helper('terbilang');
  }
  protected function template($data)
  {
    $name = $this->session->userdata('nama');
    if ($name == "") {
      echo "<meta http-equiv='refresh' content='0; url=" . base_url() . "panel'>";
    } else {
      $this->load->view('template/header', $data);
      $this->load->view('template/aside');
      $page = $this->page;
      if (isset($data['mode'])) {
        if ($data['mode'] == 'generate_wo') {
          $page = 'sa_form';
        }
        if ($data['mode'] == 'detail_wo') {
          $page = 'sa_form';
        }
      }
      $this->load->view($this->folder . "/" . $page);
      $this->load->view('template/footer');
    }
  }

  public function index()
  {
    $data['isi']   = $this->page;
    $data['title'] = $this->title;
    $data['set']   = "index";

    // $data['wo']    = $this->mh2->getNSC()->result();
    // send_json($data);
    $this->template($data);
  }

  public function fetch()
  {
    $fetch_data = $this->make_query();
    $data = array();
    foreach ($fetch_data as $rs) {
      $sub_array = array();
      $status = '';
      $button = '';

      $sub_array[] = '<a href="dealer/nsc/detail_nsc?id=' . $rs->no_nsc . '">' . $rs->no_nsc . '</a>';;
      $sub_array[] = $rs->tgl_nsc;
      $nomor_so_wo = $this->mh2->getNomorSODariWO(['id_work_order' => $rs->id_referensi])->row();
      $sub_array[] = $rs->referensi == 'sales' ? $rs->id_referensi : $nomor_so_wo->group_so;
      $sub_array[] = $rs->referensi == 'work_order' ? $rs->id_referensi : '';
      $sub_array[] = $rs->nama_customer;
      $sub_array[] = $rs->no_hp;
      $sub_array[] = $rs->tipe_ahm;
      $sub_array[] = $rs->no_polisi;
      $data[]      = $sub_array;
    }
    $output = array(
      "draw"            =>     intval($_POST["draw"]),
      "recordsFiltered" =>     $this->make_query(true),
      "data"            =>     $data
    );
    echo json_encode($output);
  }

  public function make_query($recordsFiltered = null)
  {
    $start        = $this->input->post('start');
    $length       = $this->input->post('length');
    $limit        = "LIMIT $start, $length";

    if ($recordsFiltered == true) $limit = '';

    $filter = [
      'limit'  => $limit,
      'order'  => isset($_POST['order']) ? $_POST['order'] : '',
      'order_column' => ['no_nsc', 'tgl_nsc', 'nomor_so', 'id_work_order', 'nama_customer', 'no_telp', 'tipe_ahm', 'no_polisi'],
      'search' => $this->input->post('search')['value'],
    ];

    if ($recordsFiltered == true) {
      return $this->m_nsc->getNSC($filter)->num_rows();
    } else {
      return $this->m_nsc->getNSC($filter)->result();
    }
  }

  public function detail_nsc()
  {
    $data['isi']   = $this->page;
    $data['title'] = 'Detail NSC';
    $data['mode']  = 'detail_nsc';
    $data['set']   = "form";
    $no_nsc = $this->input->get('id');

    $filter = ['no_nsc' => $no_nsc];
    $get_nsc = $this->mh2->getNSC($filter);

    if ($get_nsc->num_rows() > 0) {
      $nsc = $get_nsc->row();
      $filter = ['id_work_order' => $nsc->id_referensi];
      $wo = $this->m_wo->get_sa_form($filter);
      if ($wo->num_rows() > 0) {
        $wo = $wo->row();
        $nsc->tgl_servis         = $wo->tgl_servis;
        $nsc->id_karyawan_dealer = $wo->id_karyawan_dealer;
        $nsc->nama_lengkap       = $wo->nama_lengkap;
        $nsc->kd_dealer_so       = $wo->kode_dealer_md;
        $nsc->dealer_so          = $wo->nama_dealer;
        $nsc->tipe_ahm           = $wo->tipe_ahm;
        $nsc->no_polisi          = $wo->no_polisi;
      } else {
        $so = $this->m_nsc->getSOH3($nsc->id_referensi);
        $nsc->dealer_so       = $so->nama_dealer;
        $nsc->kd_dealer_so       = $so->kode_dealer_md;
        $nsc->nama_lengkap       = $so->nama_lengkap;
      }
      $filter = ['no_nsc' => $nsc->no_nsc];
      $nsc->parts = $this->mh2->getNSCParts($filter)->result();
      $data['row'] = $nsc;
      $data['pkp'] = $nsc->pkp;
      $data['tampil_ppn'] = $nsc->tampil_ppn;
      $data['tampil_ppn'] = 0;
      // send_json($nsc);
      $this->template($data);
    } else {
      $_SESSION['pesan']   = "Data not found !";
      $_SESSION['tipe']   = "danger";
      echo "<meta http-equiv='refresh' content='0; url=" . base_url() . "dealer/nsc'>";
    }
  }


  public function create_nsc()
  {
    $data['isi']        = $this->page;
    $data['title']      = $this->title;
    $data['mode']       = 'create_nsc';
    $data['set']        = "form";
    $data['pkp']        = dealer()->pkp;
    // $data['tampil_ppn'] = dealer()->tampil_ppn_h23;
    $data['tampil_ppn'] = 0;
    $this->template($data);
  }

  function saveNSC()
  {
    $this->load->model('h3_dealer_sales_order_model', 'h3_so');

    $waktu     = gmdate("Y-m-d H:i:s", time() + 60 * 60 * 7);
    $tanggal   = gmdate("Y-m-d", time() + 60 * 60 * 7);
    $login_id  = $this->session->userdata('id_user');
    $post      = $this->input->post();
    $no_nsc    = $this->get_no_nsc();
    $id_dealer = $this->m_admin->cari_dealer();
    $uang_muka = 0;
    if (isset($post['uang_muka'])) {
      $uang_muka = $post['uang_muka'] == '' ? 0 : $post['uang_muka'];
    }
    $insert = [
      'no_nsc'            => $no_nsc,
      'tgl_nsc'           => $tanggal,
      'id_dealer'         => $id_dealer,
      'pkp'               => dealer()->pkp,
      // 'tampil_ppn'        => dealer()->tampil_ppn_h23,
      'tampil_ppn'        => 0,
      'referensi'         => $post['referensi'],
      'id_customer'       => $post['id_customer'],
      'id_referensi'      => isset($post['nomor_so']) ? $post['nomor_so'] : $post['id_work_order'],
      'no_inv_jaminan'    => isset($post['no_inv_jaminan']) ? $post['no_inv_jaminan'] : null,
      'uang_muka'         => $uang_muka,
      'tot_nsc'           => $post['tot_nsc'],
      'created_at'        => $waktu,
      'created_by'        => $login_id,
    ];

    //Referensi Dari SO
    if (isset($_POST['nomor_so'])) {
      $filter = ['nomor_so' => $post['nomor_so']];
      $get_parts = $this->m_api->getSoPart($filter);
      if ($get_parts->num_rows() > 0) {
        foreach ($get_parts->result() as $pr) {
          $parts[] = [
            'no_nsc'       => $no_nsc,
            'id_part'      => $pr->id_part,
            'harga_beli'   => $pr->harga_beli,
            'qty'          => $pr->qty,
            'tipe_diskon'  => $pr->tipe_diskon,
            'diskon_value' => $pr->diskon_value,
            'id_promo'     => $pr->id_promo,
          ];
        }
      }
      $nomor_so = $post['nomor_so'];
      $upd_so = ['status' => 'Closed'];
      $get_so = $this->m_api->getSo($filter)->row();
      $upd_ps[] = ['status' => 'Closed', 'nomor_ps' => $get_so->nomor_ps];

      $this->h3_so->update_status_po_untuk_sales_order($get_so->nomor_so);
      if ($get_so->pembelian_dari_dealer_lain == 1) {
        $insert['id_dealer_pembeli'] = $get_so->id_dealer_pembeli;
      }
    }
    //Referensi Dari WO
    if (isset($_POST['id_work_order'])) {
      $filter = ['id_work_order' => $post['id_work_order']];
      $get_parts = $this->m_api->getWOParts($filter);

      if ($get_parts->num_rows() > 0) {
        foreach ($get_parts->result() as $pr) {
          $parts[] = [
            'no_nsc'       => $no_nsc,
            'id_part'      => $pr->id_part,
            'harga_beli'   => $pr->harga_beli,
            'qty'          => $pr->qty,
            'nomor_so_wo'  => $pr->nomor_so,
            'tipe_diskon'  => $pr->tipe_diskon,
            'id_promo'  => $pr->id_promo,
            'diskon_value' => $pr->diskon_value,
          ];
        }
        $filter = ['id_work_order' => $post['id_work_order'], 'group_nomor_so' => true];
        $get_parts = $this->m_api->getWOParts($filter);
        foreach ($get_parts->result() as $rs) {
          $filter = ['nomor_so' => $rs->nomor_so];
          $get_so = $this->m_api->getSo($filter);
          if ($get_so->num_rows() > 0) {
            $get_so = $get_so->row();
            $this->h3_so->update_status_po_untuk_sales_order($get_so->nomor_so);
            if ($get_so->pembelian_dari_dealer_lain == 1) {
              $insert['id_dealer_pembeli'] = $get_so->id_dealer_pembeli;
            }
          } else {
            $rsp = [
              'status' => 'error',
              'pesan' => 'No. SO' . $rs->nomor_so . ' tidak ditemukan !'
            ];
            send_json($rsp);
          }
          $upd_so_multi[] = ['status' => 'Closed', 'nomor_so' => $get_so->nomor_so];
          $upd_ps[] = ['status' => 'Closed', 'nomor_ps' => $get_so->nomor_ps];
        }
      }
      $this->m_wo->updateGrandTotalWO($post['id_work_order']);
    }
    // $tes = [
    //   'insert' => $insert,
    //   'parts' => isset($parts) ? $parts : null,
    //   'upd_so' => isset($upd_so) ? $upd_so : null,
    //   'upd_po' => isset($upd_po) ? $upd_po : null,
    //   'po_id' => isset($po_id) ? $po_id : null,
    //   'upd_ps' => isset($upd_ps) ? $upd_ps : null,
    // ];
    // send_json($tes);
    $this->db->trans_begin();
    $this->db->insert('tr_h23_nsc', $insert);
    if (isset($parts)) {
      $this->db->insert_batch('tr_h23_nsc_parts', $parts);
    }
    $this->notifikasi->insert([
      'id_notif_kat' => $this->db->from('ms_notifikasi_kategori')->where('kode_notif', 'notif_nsc')->get()->row()->id_notif_kat,
      'judul'        => 'Nota Suku Cadang (NSC)',
      'pesan'        => "Terdapat Nota Suku Cadang (NSC) dengan No. NSC : " . $no_nsc,
      'link'         => "dealer/nsc/detail_nsc?id=$no_nsc",
      'id_referensi' => $no_nsc,
      'id_dealer'    => $this->m_admin->cari_dealer(),
      'show_popup'   => false,
    ]);
    if (isset($upd_so)) {
      $this->db->update('tr_h3_dealer_sales_order', $upd_so, ['nomor_so' => $nomor_so]);
    }
    if (isset($upd_ps)) {
      $this->db->update_batch('tr_h3_dealer_picking_slip', $upd_ps, 'nomor_ps');
    }
    // if (isset($upd_po)) {
    //   $this->db->update('tr_h3_dealer_purchase_order', $upd_po, ['po_id' => $po_id]);
    // }
    if (isset($upd_so_multi)) {
      $this->db->update_batch('tr_h3_dealer_sales_order', $upd_so_multi, 'nomor_so');
    }
    if ($this->db->trans_status() === FALSE) {
      $this->db->trans_rollback();
      $rsp = [
        'status' => 'error',
        'pesan' => ' Something went wrong !'
      ];
    } else {
      $this->db->trans_commit();
      $rsp = [
        'status' => 'sukses',
        'no_nsc' => $no_nsc,
        'link' => base_url('dealer/nsc')
      ];

      $filter_part = [
        'no_nsc' => $no_nsc,
        'group_by_no_nsc' => true,
        'group_by_no_nsc_only_grand' => true,
        'kelompok_part_not_in' => "'Oil'"
      ];
      $get_part = $this->m_bil->getNSCParts($filter_part);
      $nilai_part = 0;
      if ($get_part->num_rows() > 0) {
        $nilai_part = $get_part->row()->gt;
      }

      $filter_oli = [
        'no_nsc' => $no_nsc,
        'group_by_no_nsc' => true,
        'group_by_no_nsc_only_grand' => true,
        'kelompok_part_in' => "'Oil'"
      ];
      $get_oli = $this->m_bil->getNSCParts($filter_oli);
      $nilai_oli = 0;
      if ($get_oli->num_rows() > 0) {
        $nilai_oli = $get_oli->row()->gt;
      }
      $upd = ['tot_nsc_part' => $nilai_part, 'tot_nsc_oli' => $nilai_oli];
      $this->db->update('tr_h23_nsc', $upd, ['no_nsc' => $no_nsc]);

      $_SESSION['pesan']   = "Pembuatan nota suku cadang (NSC) berhasil";
      $_SESSION['tipe']   = "success";
      // echo "<meta http-equiv='refresh' content='0; url=".base_url()."dealer/mutasi_stok/add'>";
    }
    echo json_encode($rsp);
  }

  public function get_no_nsc()
  {
    $th        = gmdate("y", time() + 60 * 60 * 7);
    $bln       = gmdate("m", time() + 60 * 60 * 7);
    $th_bln       = gmdate("Y-m", time() + 60 * 60 * 7);
    $tgl       = tanggal();
    $id_dealer = $this->m_admin->cari_dealer();
    $dealer    = $this->db->get_where('ms_dealer', ['id_dealer' => $id_dealer])->row();
    $get_data  = $this->db->query("SELECT no_nsc FROM tr_h23_nsc
			WHERE id_dealer='$id_dealer'
			AND LEFT(created_at,7)='$th_bln'
			ORDER BY created_at DESC LIMIT 0,1");
    if ($get_data->num_rows() > 0) {
      $row        = $get_data->row();
      $last_number = substr($row->no_nsc, -4);
      $new_kode   = 'NSC/' . $dealer->kode_dealer_md . '/' . $th . '/' . $bln . '/' . sprintf("%'.04d", $last_number + 1);
      $i = 0;
      while ($i < 1) {
        $cek = $this->db->get_where('tr_h23_nsc', ['no_nsc' => $new_kode])->num_rows();
        if ($cek > 0) {
          $gen_number    = substr($new_kode, -4);
          $new_kode = 'NSC/' . $dealer->kode_dealer_md . '/' . $th . '/' . $bln . '/' . sprintf("%'.04d", $gen_number + 1);
          $i = 0;
        } else {
          $i++;
        }
      }
    } else {
      $new_kode = 'NSC/' . $dealer->kode_dealer_md . '/' . $th . '/' . $bln . '/0001';
    }
    if (isset($_POST['ajax'])) {
      $response = ['status' => 'sukses', 'no_nsc' => strtoupper($new_kode)];
      send_json($response);
    } else {
      return strtoupper($new_kode);
    }
  }
}
